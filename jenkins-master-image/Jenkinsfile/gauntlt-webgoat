def runProjectBuild(String projectname) {
    script {
        def result = null
        try {
            result = awsCodeBuild(credentialsType: 'keys', 
                projectName: "${projectname}", 
                region: "${params.AWS_REGION}", 
                sourceControlType: 'project',
                artifactTypeOverride: 'S3',
                artifactPackagingOverride: 'ZIP',
                artifactLocationOverride: "${params.ARTIFACT_S3}",
                artifactPathOverride: "${projectname}/${BUILD_ID}",
                artifactNameOverride: 'results.zip',
                downloadArtifacts: 'true')
            sh "echo ${result.getArtifactsLocation()}"
            sh "echo ${result.getBuildId()}"
            return result.getBuildId().split(':')
        } catch (Exception e) {
            result=e.getCodeBuildResult()
            currentBuild.result = "UNSTABLE"
        }
    }
}

pipeline {
    agent any
    parameters {
        string(name: 'GAUNTLT_PROJECTNAME', defaultValue: 'GauntltTest1B81A692-eumqK0WU6lz2', description: 'CodeBuild project name')
        string(name: 'ARTIFACT_S3', defaultValue: 'codebuildstack-jenkinsbuildartifactsf33606a2-ganjumvrxqmr', description: 'CodeBuild artifact bucket')
        choice(name: 'AWS_REGION', choices: ['ap-southeast-1'], description: 'AWS region')
    }
    stages {
        stage('Gauntlt test webgoat') {
            steps {
                script{
                    echo "Build number is ${currentBuild.number}"
                    def output = runProjectBuild(params.GAUNTLT_PROJECTNAME)
                }
            }
        }

    }
    post { 
        always { 
            deleteDir()
        }
    }
}